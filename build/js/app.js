"use strict";angular.module("snailbox",["ui.router"]).config(["$stateProvider","$urlRouterProvider","$httpProvider",function(t,e,o){t.state("login",{url:"/login",templateUrl:"./app/features/login/loginTmpl.html",controller:"loginCtrl as loginCtrl"}).state("signup",{url:"/signup",templateUrl:"./app/features/signup/signupTmpl.html",controller:"signupCtrl as signupCtrl"}).state("userHome",{url:"/user/:id",templateUrl:"./app/features/userHome/userHomeTmpl.html",controller:"userHomeCtrl as userHomeCtrl"}),e.otherwise("/login"),o.interceptors.push("authInterceptor")}]),angular.module("snailbox").constant("AUTH_EVENTS",{notAuthenticated:"auth-not-authenticated",notAuthorized:"auth-not-authorized"}).constant("API",{SERVER_LOCAL_MDB:"http://localhost:4800/api/v1/",SERVER_HEROKU:"http://snailbox-api.herokuapp.com/api/v1/"}),angular.module("snailbox").service("authInterceptor",["tokenService",function(t){this.request=function(e){var o=t.getToken();return o&&(e.headers.Authorization="Bearer "+o),e},this.response=function(t){return t}}]),angular.module("snailbox").service("authService",["$http","API",function(t,e){this.signup=function(o){return t({method:"POST",url:e.SERVER_HEROKU+"signup",dataType:"json",data:o}).then(function(t){return t.data})},this.login=function(o){return t({method:"POST",url:e.SERVER_HEROKU+"login",dataType:"json",data:o}).then(function(t){return t.data})["catch"](function(t){return t.data})}}]),angular.module("snailbox").service("tokenService",["$window",function(t){var e,o=t.localStorage;this.setToken=function(t){e=t,o.setItem("userToken",t)},this.getToken=function(){return e||(e=o.getItem("userToken")),e},this.removeToken=function(){e=null,o.removeItem("userToken"),console.log("token removed")},this.isAuthenticated=function(){return!!this.getToken()}}]),angular.module("snailbox").service("userService",["$http","API",function(t,e){this.getUserById=function(o){return t({method:"GET",url:e.SERVER_HEROKU+"user/"+o}).then(function(t){return t.data})}}]),angular.module("snailbox").controller("loginCtrl",["$state","$location","authService","tokenService",function(t,e,o,n){var r=this;r.loading=!1,r.error=!1,r.goToSignup=function(){t.go("signup")},r.submitLoginForm=function(t){return r.error=!1,!!t&&(r.loading=!0,void o.login(r.data).then(function(t){return console.log("loginResponse::::",t),r.loading=!1,"Login Success"!==t.message?(r.error=!0,r.data.password="",!1):(n.setToken(t.token),void e.path("/user/"+t.user._id))}))}}]),angular.module("snailbox").controller("signupCtrl",["$state","$location","authService","tokenService",function(t,e,o,n){var r=this;r.loading=!1,r.error=!1,r.passwordError=!1,r.goToLogin=function(){t.go("login")},r.submitSignupForm=function(t){return r.error=!1,r.passwordError=!1,!!t&&(r.data.password!==r.data.password2?(r.error=!0,r.passwordError=!0,r.data.password="",r.data.password2="",!1):(r.loading=!0,void o.signup(r.data).then(function(t){return console.log("signupResponse ::::",t),r.loading=!1,"Registration Success"!==t.message?(r.error=!0,r.data.password="",r.data.password2="",!1):(n.setToken(t.token),void e.path("/user/"+t.user._id))})))}}]),angular.module("snailbox").controller("userHomeCtrl",["$stateParams","$state","userService",function(t,e,o){var n=this;n.getUser=function(){o.getUserById(t.id).then(function(t){console.log("user",t)})["catch"](function(t){e.go("login"),console.log("error",t)})},n.getUser()}]);